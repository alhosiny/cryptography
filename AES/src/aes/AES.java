package aes;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTextArea;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author hp
 */
public class AES extends javax.swing.JDialog {

    /**
     * Creates new form AES
     */
    public AES(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton4 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea4 = new javax.swing.JTextArea();
        jInternalFrame1 = new javax.swing.JInternalFrame();
        key = new javax.swing.JButton();

        jButton1.setText("jButton1");

        jButton3.setText("jButton3");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jButton2.setText("ENC");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jButton4.setText("DEC");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        jTextArea3.setColumns(20);
        jTextArea3.setRows(5);
        jScrollPane3.setViewportView(jTextArea3);

        jTextArea4.setColumns(20);
        jTextArea4.setRows(5);
        jScrollPane4.setViewportView(jTextArea4);

        jInternalFrame1.setVisible(true);

        key.setText("Key");
        key.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                keyActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
                jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jInternalFrame1Layout.createSequentialGroup()
                        .addGap(241, 241, 241)
                        .addComponent(key, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jInternalFrame1Layout.setVerticalGroup(
                jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jInternalFrame1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(key)
                        .addContainerGap(36, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 265, Short.MAX_VALUE)
                                .addComponent(jScrollPane4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, 61, Short.MAX_VALUE)
                                .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 282, Short.MAX_VALUE)
                                .addComponent(jScrollPane3)))
                .addComponent(jInternalFrame1)
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                        .addGap(34, 34, 34)
                                        .addComponent(jButton2)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                        .addGap(35, 35, 35)
                                        .addComponent(jButton4))
                                .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jInternalFrame1))
        );

        pack();
    }// </editor-fold>                        
    final JFileChooser fileDialog = new JFileChooser();
    File file;

    void displayF(File fil, JTextArea j) throws FileNotFoundException {
        Scanner read = new Scanner(fil);
        String buf = "";
        while (read.hasNext()) {
            buf = read.nextLine();
            j.setText(buf + "\n");

        }
    }

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {
        int returnVal = fileDialog.showOpenDialog(mainFrame);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            file = fileDialog.getSelectedFile();
            try {
                displayF(file, jTextArea1);
                ENC(file);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(AES.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            statusLabel.setText("Open command cancelled by user.");
        }

// TODO add your handling code here:
    }

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {
        int returnVal = fileDialog.showOpenDialog(mainFrame);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            file = fileDialog.getSelectedFile();
            try {
                displayF(file, jTextArea4);
                DEC(file);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(AES.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            statusLabel.setText("Open command cancelled by user.");
        }

// TODO add your handling code here:
        // TODO add your handling code here:
    }
    File keyFile;

    private void keyActionPerformed(java.awt.event.ActionEvent evt) {
        int returnVal = fileDialog.showOpenDialog(mainFrame);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            keyFile = fileDialog.getSelectedFile();
            // TODO add your handling code here:
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws FileNotFoundException {

        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AES.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AES.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AES.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AES.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        /* Create and display the dialog */
//(8dcab9dc035006 bc 8f 57 16 1e 00 ca fd 8d)

        String[][] x = {{"10001101", "00000011", "10001111", "00000000"},
        {"11001010", "01010000", "01010111", "11001010"},
        {"10111001", "00000110", "00010110", "11111101"},
        {"11011100", "10111100", "00011110", "10001101"}};
        String[][] v = reMix_colm(x);
    //   System.out.println(v[0][0]);

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                AES dialog = new AES(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });

    }

    String[][] S;
    String[][] S_1;

    void iniS() throws FileNotFoundException {
        Map<String, Integer> x = new HashMap<String, Integer>();
        String alp = "ABCDEF";
        x.put("A", 10);
        x.put("B", 11);
        x.put("C", 12);
        x.put("D", 13);
        x.put("E", 14);
        x.put("F", 15);

        S = new String[16][16];
        S_1 = new String[16][16];

        File a = new File("a.txt");

        Scanner re = new Scanner(a);
        while (re.hasNext()) {

            for (int i = 0; i < 16; i++) {
                for (int j = 0; j < 16; j++) {
                    String z = re.next();
                    String fi = "";
                    S[i][j] = "";
                    for (int ind = 0; ind < 2; ind++) {
                        if (alp.indexOf(z.charAt(ind)) == -1) {
                            fi = Integer.toBinaryString(Integer.parseInt("" + z.charAt(ind)));
                        } else {
                            fi = Integer.toBinaryString(x.get("" + z.charAt(ind)));
                        }
                        if (fi.length() < 4) {
                            for (int in = 4 - fi.length(); in > 0; in--) {
                                fi = "0" + fi;
                            }
                        }
                        S[i][j] += fi;
                    }

                }
            }
            break;
        }
        while (re.hasNext()) {

            for (int i = 0; i < 16; i++) {
                for (int j = 0; j < 16; j++) {
                    String z = re.next();
                    String fi = "";
                    S_1[i][j] = "";
                    for (int ind = 0; ind < 2; ind++) {
                        if (alp.indexOf(z.charAt(ind)) == -1) {
                            fi = Integer.toBinaryString(Integer.parseInt("" + z.charAt(ind)));
                        } else {
                            fi = Integer.toBinaryString(x.get("" + z.charAt(ind)));
                        }
                        if (fi.length() < 4) {
                            for (int in = 4 - fi.length(); in > 0; in--) {
                                fi = "0" + fi;
                            }
                        }
                        S_1[i][j] += fi;
                    }
                }
            }
        }
    }

    String byte_Substi(String a, int ed) {
        String b = "";
        if (ed == 0) {
            b = S[Integer.parseInt(a.substring(0, 4), 2)][Integer.parseInt(a.substring(4), 2)];
        } else {
            b = S_1[Integer.parseInt(a.substring(0, 4), 2)][Integer.parseInt(a.substring(4), 2)];
        }
        return b;
    }

    static String[][] Shift_rows(String[][] B, int ed) {
        String[][] newB = new String[4][4];
        if (ed == 0) {
            for (int i = 0; i < 4; i++) {
                int n_of_shi = i;
                for (int j = 0; j < 4; j++) {
                    newB[i][j] = B[i][(j + n_of_shi) % 4];
                }
            }
        } else {
            for (int i = 0; i < 4; i++) {
                int n_of_shi = i;
                for (int j = 0; j < 4; j++) {
                    if ((j - n_of_shi) > 0) {
                        newB[i][j] = B[i][(j - n_of_shi) % 4];
                    } else {
                        newB[i][j] = B[i][(j - n_of_shi + 4) % 4];
                    }
                }
            }
        }
        return newB;
    }

    static String x_mul(String x) {
        String re;
        if (x.charAt(0) == '0') {
            re = x.substring(1) + x.charAt(0);
        } else {
            re = x.substring(1, 4) + (x.charAt(4) ^ '1') + (x.charAt(5) ^ '1') + x.charAt(6)
                    + (x.charAt(7) ^ '1') + x.charAt(0);
        }
        return re;
    }

    static String x_9(String x) {
        String re = "";
        String fi = x_mul(x_mul(x_mul(x)));
        for (int in = 0; in < x.length(); in++) {
            re += (fi.charAt(in) ^ x.charAt(in));
        }

        return re;
    }

    static String x_11(String x) {
        String re = "";
        String fi = x_mul(x_mul(x));
        String se = "";
        for (int in = 0; in < x.length(); in++) {
            se += (fi.charAt(in) ^ x.charAt(in));
        }
        String thi = x_mul(se);
        for (int in = 0; in < x.length(); in++) {
            re += (thi.charAt(in) ^ x.charAt(in));
        }

        return re;
    }
//((((x×2)+x)×2)×2)+x

    static String x_13(String x) {
        String re = "";
        String fi = x_mul(x);
        String se = "";
        for (int in = 0; in < x.length(); in++) {
            se += (fi.charAt(in) ^ x.charAt(in));
        }
        String thi = x_mul(se);
        String fou = x_mul(thi);
        for (int in = 0; in < x.length(); in++) {
            re += (fou.charAt(in) ^ x.charAt(in));
        }

        return re;
    }

    static String x_14(String x) {
        String re = "";
        String fi = x_mul(x);
        String se = "";
        for (int in = 0; in < x.length(); in++) {
            se += (fi.charAt(in) ^ x.charAt(in));
        }
        String thi = x_mul(se);
        for (int in = 0; in < x.length(); in++) {
            re += (thi.charAt(in) ^ x.charAt(in));
        }

        re = x_mul(re);
        return re;
    }

    //////////////////////////////
    static String[][] Mix_Colum(String[][] B) {
        String[][] c = new String[4][4];
        int[][] bas = new int[][]{
            {2, 3, 1, 1},
            {1, 2, 3, 1},
            {1, 1, 2, 3},
            {3, 1, 1, 2},};
////////////////////////////
        for (int j = 0; j < 4; j++) {
            String[] xor2 = new String[4];
            for (int i = 0; i < 4; i++) {

                for (int k = 0; k < 4; k++) {
                    if (bas[i][k] == 2) {
                        xor2[k] = x_mul(B[k][j]);
                    } else if (bas[i][k] == 3) {
                        String x_m = x_mul(B[k][j]);

                        xor2[k] = "";
                        for (int s = 0; s < 8; s++) {
                            xor2[k] += x_m.charAt(s) ^ B[k][j].charAt(s);
                        }

                    } else {
                        xor2[k] = B[k][j];

                    }

                }
                c[i][j] = "";
                for (int z = 0; z < 8; z++) {
                    c[i][j] += (xor2[0].charAt(z) ^ xor2[1].charAt(z) ^ xor2[2].charAt(z) ^ xor2[3].charAt(z));
                }
            }
        }
        return c;
    }

    static String[][] reMix_colm(String[][] B) {
        String[][] c = new String[4][4];
        int[][] bas = new int[][]{
            {14, 11, 13, 9},
            {9, 14, 11, 13},
            {13, 9, 14, 11},
            {11, 13, 9, 14},};
        String[] xor2 = new String[4];
////////////////////////////
        for (int j = 0; j < 4; j++) {
            for (int i = 0; i < 4; i++) {

                for (int k = 0; k < 4; k++) {
                    if (bas[i][k] == 9) {
                        xor2[k] = x_9(B[k][j]);
                    } else if (bas[i][k] == 13) {
                        xor2[k] = x_13(B[k][j]);

                    } else if (bas[i][k] == 14) {
                        xor2[k] = x_14(B[k][j]);
                    } else {
                        xor2[k] = x_11(B[k][j]);
                    }
                }
                c[i][j] = "";
                for (int z = 0; z < 8; z++) {
                    c[i][j] += (xor2[0].charAt(z) ^ xor2[1].charAt(z) ^ xor2[2].charAt(z) ^ xor2[3].charAt(z));
                }
            }
        }
        return c;
    }

    String Rc(int s) {
        String rc = "";
        if (s < 9) {
            for (int in = 0; in < 8; in++) {
                if (in == 8 - s) {
                    rc += "1";
                } else {
                    rc += "0";
                }
            }
        } else {
            if (s == 9) {
                return "00011011";
            } else {
                return "00110110";
            }

        }
        return rc;
    }

    String g(String w, int rou) {
        String new_w = w.substring(8) + w.substring(0, 8);
        String re = "";
        for (int in = 0; in < 32; in += 8) {
            re += S[Integer.parseInt(new_w.substring(in, in + 4), 2)][Integer.parseInt(new_w.substring(in + 4, in + 8), 2)];
        }
        String nre = "";
        String rc = Rc(rou);
        for (int in = 0; in < 8; in++) {
            nre += re.charAt(in) ^ rc.charAt(in);
        }

        nre += re.substring(8);
        return nre;
    }

    String[] words;

    void key_scd() throws FileNotFoundException {
        Scanner ke = new Scanner(keyFile);
        String key = ke.next();

        words = new String[44];
        int w = 0;
        for (int in = 0; in < 128; in += 32) {
            words[w] = key.substring(in, in + 32);
            w++;
        }
        for (int in = 4; in < 44; in++) {
            words[in] = "";
            if (in % 4 == 0) {
                String wg = g(words[in - 1], in / 4);
                for (int ind = 0; ind < 32; ind++) {
                    words[in] += words[in - 4].charAt(ind) ^ wg.charAt(ind);
                }

            } else {
                for (int ind = 0; ind < 32; ind++) {
                    words[in] += words[in - 1].charAt(ind) ^ words[in - 4].charAt(ind);
                }

            }
        }

    }

    String key_addition(String plain, int rou) {
        String re = "";
        String ke = "";
        int ind = rou * 4;
        for (int y = 0; y < 4; y++) {
            ke += words[ind + y];
        }

        for (int in = 0; in < 128; in++) {
            re += plain.charAt(in) ^ ke.charAt(in);
        }
        return re;
    }

    void ENC(File fil) throws FileNotFoundException {
        iniS();
//System.out.println(S[0][0]);
        key_scd();

        Scanner refile = new Scanner(fil);
        String plain_txt = "";
        while (refile.hasNext()) {
            plain_txt += refile.next();
        }
        File ou = new File("Enc.txt");
        PrintWriter en = new PrintWriter(ou);

        while (plain_txt.length() != 0) {
            String block = plain_txt.substring(0, 128);
            plain_txt = plain_txt.substring(128);
            block = key_addition(block, 0);
            for (int r = 1; r < 11; r++) {
                String[][] B = new String[4][4];

                for (int j = 0; j < 4; j++) {
                    for (int i = 0; i < 4; i++) {
                        B[i][j] = byte_Substi(block.substring(0, 8), 0);
                        block = block.substring(8);
                    }
                }
                String[][] Shif_B = Shift_rows(B, 0);
                String[][] c;
                if (r < 10) {
                    c = Mix_Colum(Shif_B);
                } else {
                    c = Shif_B;
                }

                for (int j = 0; j < 4; j++) {
                    for (int i = 0; i < 4; i++) {
                        block += c[i][j];
                    }
                }
                block = key_addition(block, r);
                System.out.println(block);
            }
            en.print(block);
        }
        en.close();
        displayF(ou, jTextArea2);

    }

    void DEC(File fil) throws FileNotFoundException {
        iniS();
        key_scd();

        Scanner refile = new Scanner(fil);
        String plain_txt = "";
        while (refile.hasNext()) {
            plain_txt += refile.next();
        }
        File ou = new File("DEc.txt");
        PrintWriter en = new PrintWriter(ou);

        while (plain_txt.length() != 0) {
            String block = plain_txt.substring(0, 128);
            plain_txt = plain_txt.substring(128);
            for (int r = 10; r > 0; r--) {
                block = key_addition(block, r);
                String[][] B = new String[4][4];

                for (int j = 0; j < 4; j++) {
                    for (int i = 0; i < 4; i++) {
                        B[i][j] = (block.substring(0, 8));
                        block = block.substring(8);
                    }
                }

                String[][] c;
                if (r < 10) {
                    c = reMix_colm(B);
                } else {
                    c = B;
                }
                String[][] Shif_B = Shift_rows(c, 1);
                for (int j = 0; j < 4; j++) {
                    for (int i = 0; i < 4; i++) {
                        B[i][j] = byte_Substi(Shif_B[i][j], 1);
                    }
                }

                for (int j = 0; j < 4; j++) {
                    for (int i = 0; i < 4; i++) {
                        block += B[i][j];
                    }
                }
            }
            block = key_addition(block, 0);
            en.print(block);
        }
        en.close();
        displayF(ou, jTextArea3);

    }

    static Map<String, String> EnA;
    static Map<String, String> DeA;

    static void EnD() {
        EnA = new HashMap<String, String>();
        DeA = new HashMap<String, String>();

        int[] l = {0, 0, 0, 0, 0};
        EnA.put("a", "00000");
        DeA.put("00000", "a");
        int[] y = {0, 0, 0, 0, 1};
        EnA.put("b", "00001");
        DeA.put("00001", "b");

        for (int w = 2; w < 32; w++) {
            //System.out.print((char)('a'+w)+" ");
            String bit = "";
            int[] e = new int[5];
            e[0] = y[2] ^ y[4];
            // System.out.print(e[0]);
            bit += e[0];
            for (int u = 1; u < 5; u++) {
                e[u] = y[u - 1];
                //System.out.print(e[u]);
                bit += e[u];
            }
            //  System.out.println();
            y = e;
            if (w < 26) {
                EnA.put((char) ('a' + w) + "", bit);
                DeA.put(bit, (char) ('a' + w) + "");
            } else {
                EnA.put((w - 24) + "", bit);
                DeA.put(bit, (w - 24) + "");

            }

        }

    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JTextArea jTextArea4;
    private javax.swing.JButton key;
    // End of variables declaration                   
    private static JFrame mainFrame;
    private static JLabel headerLabel;
    private static JLabel statusLabel;
    private static JPanel controlPanel;

}
