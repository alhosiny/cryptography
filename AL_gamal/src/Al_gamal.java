
import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.math.BigInteger;
import java.util.Random;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JTextArea;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author hp
 */
public class Al_gamal extends javax.swing.JFrame {

    static BigInteger p;
    static BigInteger alpha;

    /**
     * Creates new form Al_gamal
     */
    public Al_gamal() {
        initComponents();
        prin(jTextArea1);
        A1();
        B1();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jTextField1.setText("       Alice");

        jTextField2.setText("       Alice");

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        jTextArea3.setColumns(20);
        jTextArea3.setRows(5);
        jScrollPane3.setViewportView(jTextArea3);

        jButton1.setText("send:A->");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("<-send:B");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("ENC");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("DEC");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3)
                            .addComponent(jScrollPane2)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jButton1)
                        .addGap(31, 31, 31)
                        .addComponent(jButton2)
                        .addGap(27, 27, 27)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                        .addComponent(jButton4)
                        .addGap(30, 30, 30))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        jTextArea2.append("A = " + A + "\n");
        BigInteger key1 = generate_key(b, A);
        jTextArea2.append("Key = " + key1 + "\n");
// TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        jTextArea3.append("B = " + B + "\n");
        key = generate_key(a, B);
        jTextArea3.append("Key = " + key + "\n");

// TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed
    BigInteger key;
    File file;
    final JFileChooser fileDialog = new JFileChooser();
    JFrame mainFrame = new JFrame();
    JLabel statusLabel = new JLabel();
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        int returnVal = fileDialog.showOpenDialog(mainFrame);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            file = fileDialog.getSelectedFile();
            try {
                Enc(file);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Al_gamal.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            statusLabel.setText("Open command cancelled by user.");
        }

// TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        int returnVal = fileDialog.showOpenDialog(mainFrame);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            file = fileDialog.getSelectedFile();
            try {
                Dec(file);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Al_gamal.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            statusLabel.setText("Open command cancelled by user.");
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    BigInteger x;
    BigInteger y;

    void Enc(File i) throws FileNotFoundException {
        File ou = new File("Enc.txt");
        PrintWriter out = new PrintWriter(ou);
        Scanner in = new Scanner(i);
        while (in.hasNext()) {
            x = in.nextBigInteger();
            y = x.multiply(key).mod(p);
            jTextArea3.append("x = " + x.toString() + "\n");
            jTextArea3.append("y = " + y.toString() + "\n");

            out.print(y);
            out.close();
        }
    }

    void Dec(File i) throws FileNotFoundException {
        File ou = new File("Dec.txt");
        PrintWriter out = new PrintWriter(ou);
        Scanner in = new Scanner(i);
        while (in.hasNext()) {
            x = in.nextBigInteger();
            y = x.multiply(key.modInverse(p)).mod(p);
            jTextArea2.append("y = " + x.toString() + "\n");
            jTextArea2.append("x = " + y.toString() + "\n");

            out.print(y);
            out.close();
        }
    }

    void prin(JTextArea j) {
        j.append("public :\n");
        j.append("p = " + p.toString() + "\n");
        j.append("alpha = " + alpha.toString() + "\n");
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Al_gamal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Al_gamal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Al_gamal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Al_gamal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        p = pri();
        alpha = gener_alph(p.subtract(new BigInteger("2")));

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Al_gamal().setVisible(true);
            }
        });

    }

    BigInteger A;
    BigInteger B;
    BigInteger a;
    BigInteger b;

    void A1() {
        a = gener_alph(p.subtract(new BigInteger("2")));
        jTextArea3.append("privateKey = " + a.toString() + "\n");
        A = generate_key(a, alpha);
        jTextArea3.append("A = " + A + "\n");

    }

    void B1() {
        b = gener_alph(p.subtract(new BigInteger("2")));
        jTextArea2.append("privateKey = " + b.toString() + "\n");
        B = generate_key(b, alpha);
        jTextArea2.append("B = " + B + "\n");
    }

    BigInteger generate_key(BigInteger x, BigInteger y) {
        return y.modPow(x, p);
    }

    static boolean mill_ra(BigInteger p, BigInteger s) {
        BigInteger p_1 = p.subtract(BigInteger.ONE);
        BigInteger p_12 = p_1;
        BigInteger r;
        BigInteger z;
        BigInteger u = BigInteger.ZERO;
        while (p_12.mod(new BigInteger("2")) == BigInteger.ZERO) {
            u.add(BigInteger.ONE);
            p_12 = p_12.divide(new BigInteger("2"));
        }
        r = p_12;
        BigInteger a = BigInteger.ZERO;
        for (BigInteger i = BigInteger.ONE; i.compareTo(s) <= 0; i = i.add(BigInteger.ONE)) {
            while (a.compareTo(new BigInteger("2")) < 0 || a.compareTo(p_1.subtract(BigInteger.ONE)) > 0) {
                a = new BigInteger(56, new Random());
            }

            z = a.modPow(r, p);
            if (z.compareTo(BigInteger.ONE) != 0 && z.compareTo(p_1) != 0) {
                for (BigInteger j = BigInteger.ONE; j.compareTo(u.subtract(BigInteger.ONE)) <= 0; j = j.add(BigInteger.ONE)) {
                    z = z.modPow(new BigInteger("2"), p);
                    if (z.compareTo(BigInteger.ONE) == 0) {
                        return false;
                    }
                }
                if (z.compareTo(p_1) != 0) {
                    return false;
                }

            }
        }

        return true;

    }

    static BigInteger pri() {
        BigInteger x = new BigInteger(256, new Random());
        while (!mill_ra(x, new BigInteger("1000000"))) {
            x = new BigInteger(56, new Random());
        }
        return x;
    }

    static BigInteger gener_alph(BigInteger n) {
        Random rnd = new Random();
        int maxNumBitLength = n.bitLength();
        BigInteger aRandomBigInt;
        do {
            aRandomBigInt = new BigInteger(maxNumBitLength, rnd);
        } //aRandomBigInt.gcd(n)
        while (aRandomBigInt.compareTo(n) > 0
                || aRandomBigInt.compareTo(new BigInteger("2")) < 0);
        return aRandomBigInt;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
